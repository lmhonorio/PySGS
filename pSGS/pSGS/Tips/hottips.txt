ITERATORS

>>> s = 'abc'
>>> it = iter(s)
>>> it
<iterator object at 0x00A1DB50>
>>> it.next()
'a'
>>> it.next()
'b'
>>> it.next()
'c'
>>> it.next()
Traceback (most recent call last):
  File "<stdin>", line 1, in ?
    it.next()
StopIteration



def reverse(data):
    for index in range(len(data)-1, -1, -1):
        yield data[index]
>>> for char in reverse('golf'):
...     print char
...
f
l
o
g


>>> [[row[i] for row in matrix] for i in range(4)]
[[1, 5, 9], [2, 6, 10], [3, 7, 11], [4, 8, 12]]


	def __getitem__(self, i):
		return self.obhbs[i]

			#@property
	#def my_attribute(self, i:int):
	#	return self.obhbs[i]

	#@my_attribute.setter
	#def my_attribute(self, value):
	#	# Do something if you want
	#	self.obhbs = value